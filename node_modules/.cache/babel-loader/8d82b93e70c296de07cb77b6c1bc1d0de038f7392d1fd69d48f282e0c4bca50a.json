{"ast":null,"code":"var _jsxFileName = \"E:\\\\web209_reactjs\\\\duancanhan\\\\src\\\\components\\\\sinhvien\\\\SinhVien.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Crud from \"../crud/curd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SinhVien() {\n  _s();\n  const [lopOptions, setLopOptions] = useState([]);\n  const [sinhVienFields, setSinhVienFields] = useState([]);\n  useEffect(() => {\n    // Gọi API để lấy dữ liệu của bảng lớp\n    axios.get(`http://localhost:8080/api/lop/hien-thi`).then(response => {\n      // Lưu trữ dữ liệu vào biến lopOptions\n      setLopOptions(response.data);\n\n      // Tạo các trường sinhVienFields với tùy chọn từ lopOptions\n      const fields = [{\n        name: \"maSinhVien\",\n        label: \"Mã\",\n        type: \"text\",\n        placeholder: \"ma\"\n      }, {\n        name: \"tenSinhVien\",\n        label: \"Tên\",\n        type: \"text\",\n        placeholder: \"ten\"\n      }, {\n        name: \"lop\",\n        label: \"Lớp\",\n        type: \"select\",\n        options: response.data.map(option => ({\n          value: option.id,\n          label: option.tenLop\n        }))\n      }];\n\n      // Lưu trữ các trường sinhVienFields vào state\n      setSinhVienFields(fields);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CRUD Sinh vien\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Crud, {\n      resource: \"sinh-vien\",\n      fields: sinhVienFields,\n      options: lopOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(SinhVien, \"YjZkrfHo1fPIV1g3yaCyxdewnzs=\");\n_c = SinhVien;\nexport default SinhVien;\nvar _c;\n$RefreshReg$(_c, \"SinhVien\");","map":{"version":3,"names":["useEffect","useState","Crud","axios","jsxDEV","_jsxDEV","SinhVien","_s","lopOptions","setLopOptions","sinhVienFields","setSinhVienFields","get","then","response","data","fields","name","label","type","placeholder","options","map","option","value","id","tenLop","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","resource","_c","$RefreshReg$"],"sources":["E:/web209_reactjs/duancanhan/src/components/sinhvien/SinhVien.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Crud from \"../crud/curd\";\r\nimport axios from \"axios\";\r\n\r\nfunction SinhVien() {\r\n  const [lopOptions, setLopOptions] = useState([]);\r\n  const [sinhVienFields, setSinhVienFields] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Gọi API để lấy dữ liệu của bảng lớp\r\n    axios\r\n      .get(`http://localhost:8080/api/lop/hien-thi`)\r\n      .then((response) => {\r\n        // Lưu trữ dữ liệu vào biến lopOptions\r\n        setLopOptions(response.data);\r\n\r\n        // Tạo các trường sinhVienFields với tùy chọn từ lopOptions\r\n        const fields = [\r\n          {\r\n            name: \"maSinhVien\",\r\n            label: \"Mã\",\r\n            type: \"text\",\r\n            placeholder: \"ma\",\r\n          },\r\n          {\r\n            name: \"tenSinhVien\",\r\n            label: \"Tên\",\r\n            type: \"text\",\r\n            placeholder: \"ten\",\r\n          },\r\n          {\r\n            name: \"lop\",\r\n            label: \"Lớp\",\r\n            type: \"select\",\r\n            options: response.data.map((option) => ({\r\n              value: option.id,\r\n              label: option.tenLop,\r\n            })),\r\n          },\r\n        ];\r\n\r\n        // Lưu trữ các trường sinhVienFields vào state\r\n        setSinhVienFields(fields);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>CRUD Sinh vien</h2>\r\n      <Crud resource=\"sinh-vien\" fields={sinhVienFields} options={lopOptions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SinhVien;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd;IACAG,KAAK,CACFS,GAAG,CAAE,wCAAuC,CAAC,CAC7CC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAL,aAAa,CAACK,QAAQ,CAACC,IAAI,CAAC;;MAE5B;MACA,MAAMC,MAAM,GAAG,CACb;QACEC,IAAI,EAAE,YAAY;QAClBC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,MAAM;QACZC,WAAW,EAAE;MACf,CAAC,EACD;QACEH,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE,MAAM;QACZC,WAAW,EAAE;MACf,CAAC,EACD;QACEH,IAAI,EAAE,KAAK;QACXC,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE,QAAQ;QACdE,OAAO,EAAEP,QAAQ,CAACC,IAAI,CAACO,GAAG,CAAEC,MAAM,KAAM;UACtCC,KAAK,EAAED,MAAM,CAACE,EAAE;UAChBP,KAAK,EAAEK,MAAM,CAACG;QAChB,CAAC,CAAC;MACJ,CAAC,CACF;;MAED;MACAf,iBAAiB,CAACK,MAAM,CAAC;IAC3B,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB9B,OAAA,CAACH,IAAI;MAACkC,QAAQ,EAAC,WAAW;MAACpB,MAAM,EAAEN,cAAe;MAACW,OAAO,EAAEb;IAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAAC5B,EAAA,CAnDQD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}